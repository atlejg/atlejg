#!/usr/bin/perl -w

use strict;

use lib $ENV{EXT_PERL_MODULES};
use Parallel::ForkManager;

sub run {

  my $nProc = shift;

  my $pm = new Parallel::ForkManager($nProc); 

  my $no = 0;
  for my $cmd (@_) {
    chomp $cmd;
    ++$no;
    $pm->start and next; # do the fork

    print "child no $no running cmd = '$cmd'\n";
    _tcsh($cmd);
    sleep(3);

    $pm->finish; # do the exit in the child process
  }
  $pm->wait_all_children;

  print "done\n";
}

sub _usage {
   return <<THE_END;
 usage : $0 commandfile nProc
  for running a lot of simulations occupying only a specified number of
  processes.  commands are found in a text file, one command for each line
THE_END
}

sub _tcsh {
   my $cmd = shift;

   system("tcsh -c '$cmd'");
}

#======================= MAIN LOGIC ===========================================

my $cmdfile   = shift || die _usage();
my $nProc   = shift || die _usage();

open FILE,$cmdfile  or die "cannot open file '$cmdfile' : $!";
my @cmds = <FILE>;
close FILE;
run($nProc,@cmds);
